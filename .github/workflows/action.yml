name: Docker Build & Deploy
run-name: Github Action is running

# main branch에 push 또는 pull request 시에만 작동
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-depoly:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt 
          pip install python-dotenv

      - name: Set Environment Variables
        run: |
          cd backend
          echo "SECRET_KEY = 'django-insecure-5m*0&ap_#^fdp+3@%-t1&-9c!hmv=$kwnw+y0jd0xn!z4fu*y='" >> my_settings.py
          echo "DATABASES = {
                    'default': {
                        'ENGINE': 'django.db.backends.mysql',
                        'NAME': 'wesalad',
                        'USER': 'root',
                        'PASSWORD': 'lh864235',
                        'HOST': 'wesalad-db.cnaw0fqhzw63.ap-northeast-2.rds.amazonaws.com',
                        'PORT': '3306',
                        'OPTIONS': {'charset': 'utf8mb4'}
                    }}" >> my_settings.py
          echo "ALGORITHM = 'HS256'" >> my_settings.py
          echo "GOOGLE_OAUTH2_REDIRECT_URI = 'https://wesalad.net/google/callback'" >> my_settings.py
          echo "GOOGLE_OAUTH2_CLIENT_ID = '968338780018-8jnmsu6a5hbbbn1arr3l8e04b5qu35o6.apps.googleusercontent.com'" >> my_settings.py
          echo "GOOGLE_OAUTH2_CLIENT_SECRET = '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'" >> my_settings.py
          echo "GOOGLE_MAIL_ADDRESS = 'Wesalad.cotchen@gmail.com'" >> my_settings.py
          echo "GOOGLE_MAIL_APP_PWD = 'qljmohdebizfivhq'" >> my_settings.py
          cat my_settings.py

      - name: Run Django Test
        run: |
          python backend/manage.py migrate
          if python backend/manage.py test backend/apps; then
            echo "::set-output name=test_result::OK"
          else
            echo "::set-output name=test_result::FAILED"
            exit 1
          fi
        
      - name: Login DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME}}
          password: ${{ secrets.DOCKER_PASSWORD}}
      
      # backend docker file 작성
      - name: Build Backend Docker images
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          push: true
          tags: |
            docker.io/${{ secrets.DOCKER_USERNAME}}/backend:latest
          
      # frontend docker file 작성
      - name: Build Frontend Docker images
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          push: true
          tags: |
            docker.io/${{ secrets.DOCKER_USERNAME}}/frontend:latest
            
      # ssh로 wesald EC2 접속.
      - name: Into Wesalad EC2
        uses: appleboy/ssh-action@master
        with:
          key: ${{ secrets.PEM_KEY }}
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME}}
      
      - name: Login DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME}}
          password: ${{ secrets.DOCKER_PASSWORD}}
      
      # 최신 docker image 가져오기
      - name: Pull Docker Image
        run: |
          docker pull docker.io/${{ secrets.DOCKER_USERNAME }}/backend:latest
          docker pull docker.io/${{ secrets.DOCKER_USERNAME }}/frontend:latest
          docker-compose down
          docker-compose up -d --force-recreate