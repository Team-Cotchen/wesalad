# Generated by Django 4.0.4 on 2022-07-04 18:08

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('characteristics', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ApplyWay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'applyways',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=40)),
            ],
            options={
                'db_table': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Flavor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('description', models.CharField(max_length=200)),
                ('image_url', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'flavors',
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'places',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('number_of_front', models.CharField(max_length=50)),
                ('number_of_back', models.CharField(max_length=50)),
                ('period', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateTimeField()),
                ('status', models.CharField(default='active', max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='posts.category')),
            ],
            options={
                'db_table': 'posts',
            },
        ),
        migrations.CreateModel(
            name='PostStack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='poststacks', to='posts.post')),
                ('stack', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='poststacks', to='characteristics.stack')),
            ],
            options={
                'db_table': 'poststacks',
            },
        ),
        migrations.CreateModel(
            name='PostPlace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postplaces', to='posts.place')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postplaces', to='posts.post')),
            ],
            options={
                'db_table': 'postplaces',
            },
        ),
        migrations.CreateModel(
            name='PostFlavor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('flavor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postflavors', to='posts.flavor')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postflavors', to='posts.post')),
            ],
            options={
                'db_table': 'postflavors',
            },
        ),
        migrations.CreateModel(
            name='PostApplyWay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('applyway', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postapplyways', to='posts.applyway')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postapplyways', to='posts.post')),
            ],
            options={
                'db_table': 'postapplyways',
            },
        ),
        migrations.CreateModel(
            name='PostAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postanswers', to='characteristics.answer')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postanswers', to='posts.post')),
            ],
            options={
                'db_table': 'postanswers',
            },
        ),
    ]
